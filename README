The Framework Class Library Extension project contains highly reuseable classes I find to be missing in .NET's FCL.

Assemblies from the original FCL are followed as much as possible:
- Whathecode.System extends on System, System.Core and WindowsBase.
- Whathecode.PresentationFramework extends on PresentationCore and PresentationFramework.

Namespaces from the original FCL are followed as much as possible:
- Helper classes are contained within the corresponding namespace. E.g. A helper class for System.Diagnostics.Process will be located in Whathecode.System.Diagnostics.ProcessHelper.
- Whole reuseable helper APIs are located in the relevant namespace. E.g. An abstract input controller is located in Whathecode.System.Windows.Input.InputController.
- Linq extensions are located in Whathecode.System.Linq.
- Extension methods are placed in an Extension namespace in the relevant namespace. E.g. general extension are located in Whathecode.System.Extensions, while extension methods when doing reflection are located in Whathecode.System.Reflection.Extensions.

Since some of the implementations I blog about start to use a lot of code from this library, I decided to make it public so people can just access the entire library instead of small separate code samples. It was becoming a burden posting all depedant code for my code samples.

The library also contains unproven toy classes, which I still have to experiment with to judge their usefulness. Be aware for such encounters when browsing the library. :)

Some of the classes depend on the (slightly altered) Arithmetic library written by Rüdiger Klaehn. It allows to use generic value types. The original library can be found on: http://www.codeproject.com/KB/cs/genericnumerics.aspx

- Steven Jeuris